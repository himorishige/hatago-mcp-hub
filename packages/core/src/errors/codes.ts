/**
 * Error codes for Hatago Hub
 * Pure enum definitions with no side effects
 */

/**
 * Error codes for Hatago Hub
 */
export enum ErrorCode {
  // MCP Related Errors (E_MCP_*)
  E_MCP_INIT_TIMEOUT = 'E_MCP_INIT_TIMEOUT',
  E_MCP_TOOL_DISCOVERY_EMPTY = 'E_MCP_TOOL_DISCOVERY_EMPTY',
  E_MCP_CONNECTION_FAILED = 'E_MCP_CONNECTION_FAILED',
  E_MCP_PROTOCOL_ERROR = 'E_MCP_PROTOCOL_ERROR',
  E_MCP_INVALID_REQUEST = 'E_MCP_INVALID_REQUEST',

  // NPX Related Errors (E_NPX_*)
  E_NPX_INSTALL_FAILED = 'E_NPX_INSTALL_FAILED',
  E_NPX_PACKAGE_NOT_FOUND = 'E_NPX_PACKAGE_NOT_FOUND',
  E_NPX_SPAWN_FAILED = 'E_NPX_SPAWN_FAILED',
  E_NPX_CACHE_CHECK_FAILED = 'E_NPX_CACHE_CHECK_FAILED',
  E_NPX_WARMUP_FAILED = 'E_NPX_WARMUP_FAILED',

  // Session Related Errors (E_SESSION_*)
  E_SESSION_NOT_FOUND = 'E_SESSION_NOT_FOUND',
  E_SESSION_EXPIRED = 'E_SESSION_EXPIRED',
  E_SESSION_VERSION_CONFLICT = 'E_SESSION_VERSION_CONFLICT',
  E_SESSION_LOCK_TIMEOUT = 'E_SESSION_LOCK_TIMEOUT',
  E_SESSION_INVALID_TOKEN = 'E_SESSION_INVALID_TOKEN',

  // Configuration Errors (E_CONFIG_*)
  E_CONFIG_INVALID = 'E_CONFIG_INVALID',
  E_CONFIG_NOT_FOUND = 'E_CONFIG_NOT_FOUND',
  E_CONFIG_PARSE_ERROR = 'E_CONFIG_PARSE_ERROR',
  E_CONFIG_VALIDATION_FAILED = 'E_CONFIG_VALIDATION_FAILED',

  // Tool Registry Errors (E_TOOL_*)
  E_TOOL_NAME_COLLISION = 'E_TOOL_NAME_COLLISION',
  E_TOOL_NOT_FOUND = 'E_TOOL_NOT_FOUND',
  E_TOOL_EXECUTION_FAILED = 'E_TOOL_EXECUTION_FAILED',

  // Server State Errors (E_STATE_*)
  E_STATE_INVALID_TRANSITION = 'E_STATE_INVALID_TRANSITION',
  E_STATE_ALREADY_RUNNING = 'E_STATE_ALREADY_RUNNING',
  E_STATE_NOT_RUNNING = 'E_STATE_NOT_RUNNING',

  // Security Errors (E_SECURITY_*)
  E_SECURITY_POLICY_DENIED = 'E_SECURITY_POLICY_DENIED',
  E_SECURITY_ENCRYPTION_FAILED = 'E_SECURITY_ENCRYPTION_FAILED',
  E_SECURITY_DECRYPTION_FAILED = 'E_SECURITY_DECRYPTION_FAILED',
  E_SECURITY_KEY_NOT_FOUND = 'E_SECURITY_KEY_NOT_FOUND',

  // System Errors (E_SYSTEM_*)
  E_SYSTEM_RESOURCE_EXHAUSTED = 'E_SYSTEM_RESOURCE_EXHAUSTED',
  E_SYSTEM_FILE_NOT_FOUND = 'E_SYSTEM_FILE_NOT_FOUND',
  E_SYSTEM_PERMISSION_DENIED = 'E_SYSTEM_PERMISSION_DENIED',
  E_SYSTEM_NETWORK_ERROR = 'E_SYSTEM_NETWORK_ERROR',
  E_SYSTEM_SECURITY_ERROR = 'E_SYSTEM_SECURITY_ERROR',
  E_SYSTEM_FS_ERROR = 'E_SYSTEM_FS_ERROR',
  E_SYSTEM_UNKNOWN = 'E_SYSTEM_UNKNOWN'
}

/**
 * Error severity levels
 */
export enum ErrorSeverity {
  CRITICAL = 'critical', // System cannot continue
  ERROR = 'error', // Operation failed
  WARNING = 'warning', // Operation completed with issues
  INFO = 'info' // Informational error
}

/**
 * Extended error information
 */
export type ErrorContext = {
  serverId?: string;
  sessionId?: string;
  toolName?: string;
  configPath?: string;
  timestamp?: Date;
  stack?: string;
  [key: string]: unknown;
};
